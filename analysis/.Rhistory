combined_accuracy %>%
filter(!correct) %>%
select(video, correct)
frame_average <- results %>%
group_by(video, actual_class) %>%
summarise(
prob_right = mean(predicted_class == 'right'),
frame_count = n(),
.groups = "drop"
)
ggplot(frame_average, aes(x = prob_right, fill = actual_class)) +
geom_histogram(alpha = 1/3, position = position_identity()) +
ggtitle(glue("Predictive accuracy of classification (frames averaged)")) +
theme(legend.position = "top")
ggplot(frame_average, aes(x = prob_right, y = frame_count, colour = actual_class)) +
geom_point(alpha = 0.2) +
ggtitle("Accuracy by direction and frame count") +
theme(legend.position = "top")
combined_accuracy <- frame_average %>%
mutate(correct = (prob_right > .5) == (actual_class == "right"))
combined_accuracy %>%
group_by(actual_class) %>%
summarise(mean(correct))
combined_accuracy %>%
filter(!correct) %>%
select(video, correct)
library(tidyverse)
library(glue)
results <- read_csv(paste0("../.output/monkshood/", "/results.csv"))
results <- results %>%
mutate(correct = predicted_class == actual_class)
results
ggplot(results, aes(y = pitch, fill = correct)) +
geom_histogram(binwidth = .05, position = 'identity', alpha = 1/3)
ggplot(results, aes(y = yaw, fill = correct)) +
geom_histogram(binwidth = .05, position = 'identity', alpha = 1/3)
ggplot(results, aes(y = pitch, x = yaw, colour = correct)) +
geom_point(alpha = 0.2) +
ggtitle(glue("Gaze direction verdicts")) +
theme(legend.position = "top")
mean_cl_normal(results$correct)
results %>%
group_by(actual_class) %>%
summarise(accuracy = mean(correct))
ggplot(results, aes(x = pitch, fill = correct)) +
geom_histogram(binwidth = .05, position = 'identity', alpha = 1/3)
ggplot(results, aes(y = yaw, fill = correct)) +
geom_histogram(binwidth = .05, position = 'identity', alpha = 1/3)
ggplot(results, aes(y = yaw, x = pitch, colour = correct)) +
geom_point(alpha = 0.2) +
ggtitle(glue("Gaze direction verdicts")) +
theme(legend.position = "top")
mean_cl_normal(results$correct)
results %>%
group_by(actual_class) %>%
summarise(accuracy = mean(correct))
ggplot(results, aes(x = pitch, fill = correct)) +
geom_histogram(binwidth = .05, position = 'identity', alpha = 1/3)
ggplot(results, aes(y = yaw, fill = correct)) +
geom_histogram(binwidth = .05, position = 'identity', alpha = 1/3)
ggplot(results, aes(y = yaw, x = pitch, colour = correct)) +
geom_point(alpha = 0.2) +
ggtitle(glue("Gaze direction verdicts")) +
theme(legend.position = "top")
mean_cl_normal(results$correct)
results %>%
group_by(actual_class) %>%
summarise(accuracy = mean(correct))
results %>%
filter(face_count < 2) %>%
group_by(actual_class) %>%
summarise(accuracy = mean(correct))
results %>% summarise(accuracy = mean(correct))
ggplot(results, aes(x = pitch, fill = correct)) +
geom_histogram(binwidth = .05, position = 'identity', alpha = 1/3)
ggplot(results, aes(y = yaw, fill = correct)) +
geom_histogram(binwidth = .05, position = 'identity', alpha = 1/3)
ggplot(results, aes(y = yaw, x = pitch, colour = correct)) +
geom_point(alpha = 0.2) +
ggtitle(glue("Gaze direction verdicts")) +
theme(legend.position = "top")
mean_cl_normal(results$correct)
results %>%
group_by(actual_class) %>%
summarise(accuracy = mean(correct))
results %>% summarise(accuracy = mean(correct))
results %>%
filter(face_count < 2) %>%
group_by(actual_class) %>%
summarise(accuracy = mean(correct))
frame_average <- results %>%
group_by(video, actual_class) %>%
summarise(
prob_right = mean(predicted_class == 'right'),
frame_count = n(),
.groups = "drop"
)
ggplot(frame_average, aes(x = prob_right, fill = actual_class)) +
geom_histogram(alpha = 1/3, position = position_identity()) +
ggtitle(glue("Predictive accuracy of classification (frames averaged)")) +
theme(legend.position = "top")
ggplot(frame_average, aes(x = prob_right, y = frame_count, colour = actual_class)) +
geom_point(alpha = 0.2) +
ggtitle("Accuracy by direction and frame count") +
theme(legend.position = "top")
combined_accuracy <- frame_average %>%
mutate(correct = (prob_right > .5) == (actual_class == "right"))
combined_accuracy %>%
summarise(accuracy = mean(correct))
combined_accuracy %>%
group_by(actual_class, face_count) %>%
summarise(mean(correct))
frame_average <- results %>%
group_by(video, actual_class, face_count) %>%
summarise(
prob_right = mean(predicted_class == 'right'),
frame_count = n(),
.groups = "drop"
)
ggplot(frame_average, aes(x = prob_right, fill = actual_class)) +
geom_histogram(alpha = 1/3, position = position_identity()) +
ggtitle(glue("Predictive accuracy of classification (frames averaged)")) +
theme(legend.position = "top")
ggplot(frame_average, aes(x = prob_right, y = frame_count, colour = actual_class)) +
geom_point(alpha = 0.2) +
ggtitle("Accuracy by direction and frame count") +
theme(legend.position = "top")
combined_accuracy <- frame_average %>%
mutate(correct = (prob_right > .5) == (actual_class == "right"))
combined_accuracy %>%
summarise(accuracy = mean(correct))
combined_accuracy %>%
group_by(actual_class, face_count) %>%
summarise(mean(correct))
combined_accuracy %>%
filter(!correct) %>%
select(video, correct)
misclassified <-
tribble(
~video, ~reason,
"0001_17_11_L.mp4", "wrong label",
"0002_17_56_R.mp4", "ambiguous",
)
frame_average <- results %>%
group_by(video, actual_class, face_count) %>%
summarise(
prob_right = mean(predicted_class == 'right'),
frame_count = n(),
.groups = "drop"
)
ggplot(frame_average, aes(x = prob_right, fill = actual_class)) +
geom_histogram(alpha = 1/3, position = position_identity()) +
ggtitle(glue("Predictive accuracy of classification (frames averaged)")) +
theme(legend.position = "top")
ggplot(frame_average, aes(x = prob_right, y = frame_count, colour = actual_class)) +
geom_point(alpha = 0.2) +
ggtitle("Accuracy by direction and frame count") +
theme(legend.position = "top")
combined_accuracy <- frame_average %>%
mutate(correct = (prob_right > .5) == (actual_class == "right"))
combined_accuracy %>%
summarise(accuracy = mean(correct))
combined_accuracy %>%
group_by(actual_class, face_count) %>%
summarise(mean(correct))
combined_accuracy %>%
filter(!correct) %>%
select(video, face_count, correct)
misclassified <-
tribble(
~video, ~reason,
"0001_17_11_L.mp4", "wrong label",
"0002_17_56_R.mp4", "ambiguous",
)
accuracy_by_frame_count <- frame_average %>%
mutate(frames = cut(frame_count, 4)) %>%
group_by(frames) %>%
summarise(mean(correct))
accuracy_by_frame_count
frame_average %>%
mutate(frames = cut(frame_count, 4))
combined_accuracy %>%
mutate(frames = cut(frame_count, 4)) %>%
group_by(frames) %>%
summarise(mean(correct))
combined_accuracy %>%
mutate(frames = cut(frame_count, 10)) %>%
group_by(frames) %>%
summarise(mean(correct))
accuracy_by_frame_count <- combined_accuracy %>%
mutate(frames = cut(frame_count, 100)) %>%
group_by(frames) %>%
summarise(mean(correct), n = n())
accuracy_by_frame_count
ggplot(accuracy_by_frame_count, aes(x = frames, y = accuracy, size = n)) +
geom_point()
accuracy_by_frame_count <- combined_accuracy %>%
mutate(frames = cut(frame_count, 100)) %>%
group_by(frames) %>%
summarise(accuracy = mean(correct), n = n())
accuracy_by_frame_count
ggplot(accuracy_by_frame_count, aes(x = frames, y = accuracy, size = n)) +
geom_point()
accuracy_by_frame_count <- combined_accuracy %>%
mutate(frames = cut(frame_count, 10)) %>%
group_by(frames) %>%
summarise(accuracy = mean(correct), n = n())
accuracy_by_frame_count
ggplot(accuracy_by_frame_count, aes(x = frames, y = accuracy, size = n)) +
geom_point()
ggplot(accuracy_by_frame_count, aes(x = frames, y = accuracy)) +
geom_point()
combined_accuracy %>%
filter(!correct) %>%
select(video, face_count, frame_count, correct) %>%
arrange(face_count, frame_count)
combined_accuracy %>%
filter(!correct) %>%
select(video, face_count, frame_count, correct) %>%
arrange(-face_count, -frame_count)
results
frame_average <- results %>%
group_by(video, actual_class, face_count) %>%
summarise(
mean_pitch = mean(pitch),
frame_count = n(),
.groups = "drop"
) %>%
mutate(
predicted_class = if_else(mean_pitch < 0, 'left', 'right'),
correct = predicted_class == actual_class
)
ggplot(frame_average, aes(x = mean_pitch, fill = actual_class)) +
geom_histogram(alpha = 1/3, position = position_identity()) +
ggtitle(glue("Predictive accuracy of classification (frames averaged)")) +
theme(legend.position = "top")
ggplot(frame_average, aes(x = mean_pitch, y = frame_count, colour = actual_class)) +
geom_point(alpha = 0.2) +
ggtitle("Accuracy by direction and frame count") +
theme(legend.position = "top")
frame_average %>%
summarise(accuracy = mean(correct))
frame_average %>%
group_by(actual_class, face_count) %>%
summarise(mean(correct))
accuracy_by_frame_count <- frame_average %>%
mutate(frames = cut(frame_count, 10)) %>%
group_by(frames) %>%
summarise(accuracy = mean(correct), n = n())
accuracy_by_frame_count
ggplot(accuracy_by_frame_count, aes(x = frames, y = accuracy)) +
geom_point()
frame_average %>%
filter(!correct) %>%
select(video, face_count, frame_count, correct) %>%
arrange(-face_count, -frame_count)
frame_average %>%
filter(!correct) %>%
select(video, face_count, frame_count, mean_pitch, correct) %>%
arrange(-face_count, -frame_count)
frame_average %>%
filter(!correct) %>%
select(video, face_count, frame_count, mean_pitch, correct) %>%
arrange(-face_count, -frame_count, -mean_pitch)
frame_average %>%
filter(!correct) %>%
select(video, face_count, frame_count, mean_pitch, correct) %>%
arrange(-face_count, -frame_count, -abs(mean_pitch))
frame_average %>%
filter(!correct) %>%
select(video, face_count, frame_count, mean_pitch, correct) %>%
arrange(-abs(mean_pitch), -face_count, -frame_count)
mistakes %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant) %>%
summarise(n = n())
mistakes <- frame_average %>%
filter(!correct) %>%
select(video, face_count, frame_count, mean_pitch, correct) %>%
arrange(-abs(mean_pitch), -face_count, -frame_count)
mistakes
mistakes %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant) %>%
summarise(n = n())
mistakes %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant) %>%
summarise(n = n()) %>%
arrange(-n)
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant) %>%
summarise(n_correct = count(correct == T), n_incorrect = count(!correct))
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct")
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n)
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
arrange(-correctFALSE)
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
mutate(accuracy = mean(correctTRUE, correctFALSE)) %>%
arrange(accuracy)
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
mutate(across(everything(), if_else(is.na(.), ., 0))) %>%
mutate(accuracy = mean(correctTRUE, correctFALSE)) %>%
arrange(accuracy)
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
mutate(across(everything(), if_else(is.na(.), ., 0)))
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
mutate(across(starts_with('correct'), if_else(is.na(.), ., 0)))
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
mutate(across(starts_with('correct'), ~ if_else(is.na(.), ., 0)))
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
mutate(across(starts_with('correct'), ~ if_else(is.na(.), ., 0L)))
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
mutate(across(starts_with('correct'), ~ if_else(is.na(.), 0L, .)))
# errors by participant video
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
mutate(across(starts_with('correct'), ~ if_else(is.na(.), 0L, .))) %>%
mutate(accuracy = mean(correctTRUE, correctFALSE)) %>%
arrange(accuracy)
# errors by participant video
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
mutate(across(starts_with('correct'), ~ if_else(is.na(.), 0L, .))) %>%
mutate(accuracy = correctTRUE / (correctTRUE + correctFALSE)) %>%
arrange(accuracy)
frame_average %>%
filter(!correct, starts_with(video, '0011'))
frame_average %>%
filter(!correct, str_starts(video, '0011'))
frame_average <- results %>%
group_by(video, actual_class, face_count) %>%
summarise(
mean_pitch = mean(pitch),
frame_count = n(),
.groups = "drop"
) %>%
mutate(
predicted_class = if_else(mean_pitch < 0, 'left', 'right'),
correct = predicted_class == actual_class
)
ggplot(frame_average, aes(x = mean_pitch, fill = actual_class)) +
geom_histogram(alpha = 1/3, position = position_identity()) +
ggtitle(glue("Predictive accuracy of classification (frames averaged)")) +
theme(legend.position = "top")
ggplot(frame_average, aes(x = mean_pitch, y = frame_count, colour = actual_class)) +
geom_point(alpha = 0.2) +
ggtitle("Accuracy by direction and frame count") +
theme(legend.position = "top")
frame_average %>%
summarise(accuracy = mean(correct))
frame_average %>%
group_by(actual_class, face_count) %>%
summarise(mean(correct))
accuracy_by_frame_count <- frame_average %>%
mutate(frames = cut(frame_count, 10)) %>%
group_by(frames) %>%
summarise(accuracy = mean(correct), n = n())
accuracy_by_frame_count
ggplot(accuracy_by_frame_count, aes(x = frames, y = accuracy)) +
geom_point()
frame_average %>%
filter(!correct) %>%
select(video, face_count, frame_count, mean_pitch, correct) %>%
arrange(-abs(mean_pitch), -face_count, -frame_count)
# errors by participant video
frame_average %>%
mutate(participant = str_extract(video, "^[^_]+")) %>%
group_by(participant, correct) %>%
summarise(n = n()) %>%
pivot_wider(names_from = correct, names_prefix = "correct", values_from = n) %>%
mutate(across(starts_with('correct'), ~ if_else(is.na(.), 0L, .))) %>%
mutate(accuracy = correctTRUE / (correctTRUE + correctFALSE)) %>%
arrange(accuracy)
frame_average %>%
filter(!correct, str_starts(video, '0011'))
frame_average_votes <- results %>%
group_by(video, actual_class, face_count) %>%
summarise(
prob_right = mean(predicted_class == 'right'),
frame_count = n(),
.groups = "drop"
)
ggplot(frame_average_votes, aes(x = prob_right, fill = actual_class)) +
geom_histogram(alpha = 1/3, position = position_identity()) +
ggtitle(glue("Predictive accuracy of classification (frames averaged)")) +
theme(legend.position = "top")
ggplot(frame_average_votes, aes(x = prob_right, y = frame_count, colour = actual_class)) +
geom_point(alpha = 0.2) +
ggtitle("Accuracy by direction and frame count") +
theme(legend.position = "top")
combined_accuracy_votes <- frame_average_votes %>%
mutate(correct = (prob_right > .5) == (actual_class == "right"))
combined_accuracy_votes %>%
summarise(accuracy = mean(correct))
combined_accuracy_votes %>%
group_by(actual_class, face_count) %>%
summarise(mean(correct))
accuracy_by_frame_count_votes <- combined_accuracy_votes %>%
mutate(frames = cut(frame_count, 10)) %>%
group_by(frames) %>%
summarise(accuracy = mean(correct), n = n())
accuracy_by_frame_count_votes
ggplot(accuracy_by_frame_count_votes, aes(x = frames, y = accuracy)) +
geom_point()
combined_accuracy_votes %>%
filter(!correct) %>%
select(video, face_count, frame_count, correct) %>%
arrange(-face_count, -frame_count)
combined_accuracy_votes %>%
left_join(
frame_average %>% select(video, correct),
by = "video",
)
combined_accuracy_votes %>%
left_join(
frame_average %>% select(video, correct),
by = "video",
suffix = c("", "_using_mean_pitch")
) %>%
filter(correct != correct_using_mean_pitch)
combined_accuracy_votes %>%
left_join(
frame_average %>% select(video, correct, mean_pitch),
by = "video",
suffix = c("", "_using_mean_pitch")
) %>%
filter(correct != correct_using_mean_pitch)
combined_accuracy_votes %>%
left_join(
frame_average %>% select(video, correct, mean_pitch),
by = "video",
suffix = c("", "_using_mean_pitch")
) %>%
filter(correct != correct_using_mean_pitch) %>%
select(video, prob_right, mean_pitch, actual_class)
# disagreements between votes-based and averaging pitch combination techniques
combined_accuracy_votes %>%
left_join(
frame_average %>% select(video, correct, mean_pitch),
by = "video",
suffix = c("", "_using_mean_pitch")
) %>%
filter(correct != correct_using_mean_pitch) %>%
select(video, frame_count, prob_right, mean_pitch, actual_class)
# disagreements between votes-based and averaging pitch combination techniques
combined_accuracy_votes %>%
left_join(
frame_average %>% select(video, correct, mean_pitch),
by = "video",
suffix = c("", "_using_mean_pitch")
) %>%
filter(correct != correct_using_mean_pitch) %>%
select(video, frame_count, prob_right, mean_pitch, actual_class) %>%
arrange(prob_right, mean_pitch)
# disagreements between votes-based and averaging pitch combination techniques
combined_accuracy_votes %>%
left_join(
frame_average %>% select(video, correct, mean_pitch),
by = "video",
suffix = c("", "_using_mean_pitch")
) %>%
filter(correct != correct_using_mean_pitch) %>%
select(video, frame_count, prob_right, mean_pitch, actual_class) %>%
arrange(prob_right, -mean_pitch)
